type Palette = { [shade: number]: string };
type TokenTheme = { [key: string]: Palette };

export enum ThemeMode {
  dark = 'dark',
  light = 'light',
}

// color design tokens export
// these colour schemes (except for those manually adjusted) were generated by the Tailwind CSS generator
export const tokensDarkTheme: TokenTheme = {
  grey: {
    0: '#FFFFFF', // manually adjusted
    10: '#F6F6F6', // manually adjusted
    50: '#F0F0F0', // manually adjusted
    100: '#E0E0E0',
    200: '#C2C2C2',
    300: '#A3A3A3',
    400: '#858585',
    500: '#666666',
    600: '#525252',
    700: '#3D3D3D',
    800: '#292929',
    900: '#141414',
    1000: '#000000', // manually adjusted
  },
  primary: {
    // blue
    100: '#D3D4DE',
    200: '#A6A9BE',
    300: '#7A7F9D',
    400: '#4D547D',
    500: '#21295C',
    600: '#191F45', // manually adjusted
    700: '#141937',
    800: '#0D1025',
    900: '#070812',
  },
  secondary: {
    // yellow
    50: '#F0F0F0', // manually adjusted
    100: '#FFF6E0',
    200: '#FFEDC2',
    300: '#FFE3A3',
    400: '#FFDA85',
    500: '#FFD166',
    600: '#CCA752',
    700: '#997D3D',
    800: '#665429',
    900: '#332A14',
  },
};

// function that reverses the color palette
const reverseTokens = (tokensTheme: TokenTheme): TokenTheme => {
  const reversedTokens = {} as TokenTheme;
  Object.entries(tokensTheme).forEach(([key, value]) => {
    const keys = Object.keys(value) as unknown as number[];
    const values = Object.values(value);
    const length = keys.length;
    const reversedObject = {} as Palette;
    for (let index = 0; index < length; index++) {
      reversedObject[keys[index]] = values[length - index - 1];
    }
    reversedTokens[key] = reversedObject;
  });
  return reversedTokens;
};
export const tokensLightTheme = reverseTokens(tokensDarkTheme);

// theme settings for MaterialUI (mui)
export const themeSettings = (mode: ThemeMode) => {
  return {
    palette: {
      mode: mode,
      ...(mode === ThemeMode.dark
        ? {
            // palette values for dark mode
            primary: {
              ...tokensDarkTheme.primary,
              main: tokensDarkTheme.primary[400],
              light: tokensDarkTheme.primary[400],
            },
            secondary: {
              ...tokensDarkTheme.secondary,
              main: tokensDarkTheme.secondary[300],
            },
            neutral: {
              ...tokensDarkTheme.grey,
              main: tokensDarkTheme.grey[500],
            },
            background: {
              default: tokensDarkTheme.primary[600],
              alt: tokensDarkTheme.primary[500],
            },
          }
        : {
            // palette values for light mode
            primary: {
              ...tokensLightTheme.primary,
              main: tokensDarkTheme.grey[50],
              light: tokensDarkTheme.grey[100],
            },
            secondary: {
              ...tokensLightTheme.secondary,
              main: tokensDarkTheme.secondary[600],
              light: tokensDarkTheme.secondary[700],
            },
            neutral: {
              ...tokensLightTheme.grey,
              main: tokensDarkTheme.grey[500],
            },
            background: {
              default: tokensDarkTheme.grey[0],
              alt: tokensDarkTheme.grey[50],
            },
          }),
    },
    typography: {
      // 'Inter' is a Google font
      fontFamily: ['Inter', 'sans-serif'].join(','),
      fontSize: 12,
      h1: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 40,
      },
      h2: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 32,
      },
      h3: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 24,
      },
      h4: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 20,
      },
      h5: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 16,
      },
      h6: {
        fontFamily: ['Inter', 'sans-serif'].join(','),
        fontSize: 14,
      },
    },
  };
};
